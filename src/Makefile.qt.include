bin_PROGRAMS += qt/hivemind-qt
EXTRA_LIBRARIES += qt/libhivemindqt.a

# hivemind qt core #
QT_TS = \
  qt/locale/hivemind_ach.ts \
  qt/locale/hivemind_af_ZA.ts \
  qt/locale/hivemind_ar.ts \
  qt/locale/hivemind_be_BY.ts \
  qt/locale/hivemind_bg.ts \
  qt/locale/hivemind_bs.ts \
  qt/locale/hivemind_ca_ES.ts \
  qt/locale/hivemind_ca.ts \
  qt/locale/hivemind_ca@valencia.ts \
  qt/locale/hivemind_cmn.ts \
  qt/locale/hivemind_cs.ts \
  qt/locale/hivemind_cy.ts \
  qt/locale/hivemind_da.ts \
  qt/locale/hivemind_de.ts \
  qt/locale/hivemind_el_GR.ts \
  qt/locale/hivemind_en.ts \
  qt/locale/hivemind_eo.ts \
  qt/locale/hivemind_es_CL.ts \
  qt/locale/hivemind_es_DO.ts \
  qt/locale/hivemind_es_MX.ts \
  qt/locale/hivemind_es.ts \
  qt/locale/hivemind_es_UY.ts \
  qt/locale/hivemind_et.ts \
  qt/locale/hivemind_eu_ES.ts \
  qt/locale/hivemind_fa_IR.ts \
  qt/locale/hivemind_fa.ts \
  qt/locale/hivemind_fi.ts \
  qt/locale/hivemind_fr_CA.ts \
  qt/locale/hivemind_fr.ts \
  qt/locale/hivemind_gl.ts \
  qt/locale/hivemind_gu_IN.ts \
  qt/locale/hivemind_he.ts \
  qt/locale/hivemind_hi_IN.ts \
  qt/locale/hivemind_hr.ts \
  qt/locale/hivemind_hu.ts \
  qt/locale/hivemind_id_ID.ts \
  qt/locale/hivemind_it.ts \
  qt/locale/hivemind_ja.ts \
  qt/locale/hivemind_ka.ts \
  qt/locale/hivemind_kk_KZ.ts \
  qt/locale/hivemind_ko_KR.ts \
  qt/locale/hivemind_ky.ts \
  qt/locale/hivemind_la.ts \
  qt/locale/hivemind_lt.ts \
  qt/locale/hivemind_lv_LV.ts \
  qt/locale/hivemind_mn.ts \
  qt/locale/hivemind_ms_MY.ts \
  qt/locale/hivemind_nb.ts \
  qt/locale/hivemind_nl.ts \
  qt/locale/hivemind_pam.ts \
  qt/locale/hivemind_pl.ts \
  qt/locale/hivemind_pt_BR.ts \
  qt/locale/hivemind_pt_PT.ts \
  qt/locale/hivemind_ro_RO.ts \
  qt/locale/hivemind_ru.ts \
  qt/locale/hivemind_sah.ts \
  qt/locale/hivemind_sk.ts \
  qt/locale/hivemind_sl_SI.ts \
  qt/locale/hivemind_sq.ts \
  qt/locale/hivemind_sr.ts \
  qt/locale/hivemind_sv.ts \
  qt/locale/hivemind_th_TH.ts \
  qt/locale/hivemind_tr.ts \
  qt/locale/hivemind_uk.ts \
  qt/locale/hivemind_ur_PK.ts \
  qt/locale/hivemind_uz@Cyrl.ts \
  qt/locale/hivemind_vi.ts \
  qt/locale/hivemind_vi_VN.ts \
  qt/locale/hivemind_zh_CN.ts \
  qt/locale/hivemind_zh_HK.ts \
  qt/locale/hivemind_zh_TW.ts

QT_FORMS_UI = \
  qt/forms/addressbookpage.ui \
  qt/forms/askpassphrasedialog.ui \
  qt/forms/authorview.ui \
  qt/forms/coincontroldialog.ui \
  qt/forms/combocreationwidget.ui \
  qt/forms/decisioncreationwidget.ui \
  qt/forms/decisionmarketcreationwidget.ui \
  qt/forms/decisionselectionview.ui \
  qt/forms/editaddressdialog.ui \
  qt/forms/helpmessagedialog.ui \
  qt/forms/intro.ui \
  qt/forms/marketgraphwidget.ui \
  qt/forms/marketview.ui \
  qt/forms/markettradeview.ui \
  qt/forms/openuridialog.ui \
  qt/forms/optionsdialog.ui \
  qt/forms/overviewpage.ui \
  qt/forms/receivecoinsdialog.ui \
  qt/forms/receiverequestdialog.ui \
  qt/forms/rpcconsole.ui \
  qt/forms/sendcoinsdialog.ui \
  qt/forms/sendcoinsentry.ui \
  qt/forms/signverifymessagedialog.ui \
  qt/forms/transactiondescdialog.ui \
  qt/forms/voteview.ui

QT_MOC_CPP = \
  qt/moc_addressbookpage.cpp \
  qt/moc_addresstablemodel.cpp \
  qt/moc_askpassphrasedialog.cpp \
  qt/moc_authorview.cpp \
  qt/moc_authorpendingtablemodel.cpp \
  qt/moc_branchselect.cpp \
  qt/moc_hivemindaddressvalidator.cpp \
  qt/moc_hivemindamountfield.cpp \
  qt/moc_hivemindgui.cpp \
  qt/moc_hivemindunits.cpp \
  qt/moc_clientmodel.cpp \
  qt/moc_coincontroldialog.cpp \
  qt/moc_coincontroltreewidget.cpp \
  qt/moc_combocreationwidget.cpp \
  qt/moc_csvmodelwriter.cpp \
  qt/moc_decisioncreationwidget.cpp \
  qt/moc_decisionmarketcreationwidget.cpp \
  qt/moc_decisionselectionview.cpp \
  qt/moc_decisionselectionmodel.cpp \
  qt/moc_editaddressdialog.cpp \
  qt/moc_guiutil.cpp \
  qt/moc_intro.cpp \
  qt/moc_macdockiconhandler.cpp \
  qt/moc_macnotificationhandler.cpp \
  qt/moc_marketgraphwidget.cpp \
  qt/moc_marketview.cpp \
  qt/moc_marketmodel.cpp \
  qt/moc_markettradeview.cpp \
  qt/moc_ballotview.cpp \
  qt/moc_ballotballotwindow.cpp \
  qt/moc_ballotballotfilterproxymodel.cpp \
  qt/moc_ballotballottablemodel.cpp \
  qt/moc_ballotbranchwindow.cpp \
  qt/moc_ballotoutcomewindow.cpp \
  qt/moc_ballotoutcomefilterproxymodel.cpp \
  qt/moc_ballotoutcometablemodel.cpp \
  qt/moc_ballotsealedvotefilterproxymodel.cpp \
  qt/moc_ballotsealedvotewindow.cpp \
  qt/moc_ballotsealedvotetablemodel.cpp \
  qt/moc_ballotvotefilterproxymodel.cpp \
  qt/moc_ballotvotewindow.cpp \
  qt/moc_ballotvotetablemodel.cpp \
  qt/moc_decisionbranchfilterproxymodel.cpp \
  qt/moc_decisionbranchtablemodel.cpp \
  qt/moc_decisionbranchwindow.cpp \
  qt/moc_decisiondecisionfilterproxymodel.cpp \
  qt/moc_decisiondecisiontablemodel.cpp \
  qt/moc_decisiondecisionwindow.cpp \
  qt/moc_decisionmarketfilterproxymodel.cpp \
  qt/moc_decisionmarkettablemodel.cpp \
  qt/moc_decisionmarketwindow.cpp \
  qt/moc_decisiontradefilterproxymodel.cpp \
  qt/moc_decisiontradetablemodel.cpp \
  qt/moc_decisiontradewindow.cpp \
  qt/moc_decisionview.cpp \
  qt/moc_decisionviewgraph.cpp \
  qt/moc_hivemindrecenttablemodel.cpp \
  qt/moc_marketview.cpp \
  qt/moc_marketviewgraph.cpp \
  qt/moc_notificator.cpp \
  qt/moc_openuridialog.cpp \
  qt/moc_optionsdialog.cpp \
  qt/moc_optionsmodel.cpp \
  qt/moc_overviewpage.cpp \
  qt/moc_peertablemodel.cpp \
  qt/moc_paymentserver.cpp \
  qt/moc_qcustomplot.cpp \
  qt/moc_qvalidatedlineedit.cpp \
  qt/moc_qvaluecombobox.cpp \
  qt/moc_receivecoinsdialog.cpp \
  qt/moc_receiverequestdialog.cpp \
  qt/moc_recentrequeststablemodel.cpp \
  qt/moc_resolvevotedialog.cpp \
  qt/moc_resolvevotegraph.cpp \
  qt/moc_resolvevotecoltablemodel.cpp \
  qt/moc_resolvevoterowtablemodel.cpp \
  qt/moc_resolvevoteinputtablemodel.cpp \
  qt/moc_rpcconsole.cpp \
  qt/moc_sendcoinsdialog.cpp \
  qt/moc_sendcoinsentry.cpp \
  qt/moc_signverifymessagedialog.cpp \
  qt/moc_splashscreen.cpp \
  qt/moc_trafficgraphwidget.cpp \
  qt/moc_transactiondesc.cpp \
  qt/moc_transactiondescdialog.cpp \
  qt/moc_transactionfilterproxy.cpp \
  qt/moc_transactiontablemodel.cpp \
  qt/moc_transactionview.cpp \
  qt/moc_utilitydialog.cpp \
  qt/moc_voteview.cpp \
  qt/moc_walletframe.cpp \
  qt/moc_walletmodel.cpp \
  qt/moc_walletview.cpp

HIVEMIND_MM = \
  qt/macdockiconhandler.mm \
  qt/macnotificationhandler.mm

QT_MOC = \
  qt/hivemind.moc \
  qt/hivemindamountfield.moc \
  qt/intro.moc \
  qt/overviewpage.moc \
  qt/rpcconsole.moc

QT_QRC_CPP = qt/qrc_hivemind.cpp
QT_QRC = qt/hivemind.qrc
QT_QRC_LOCALE_CPP = qt/qrc_hivemind_locale.cpp
QT_QRC_LOCALE = qt/hivemind_locale.qrc

PROTOBUF_CC = qt/paymentrequest.pb.cc
PROTOBUF_H = qt/paymentrequest.pb.h
PROTOBUF_PROTO = qt/paymentrequest.proto

HIVEMIND_QT_H = \
  qt/addressbookpage.h \
  qt/addresstablemodel.h \
  qt/askpassphrasedialog.h \
  qt/authorview.h \
  qt/authorpendingtablemodel.h \
  qt/branchselect.h \
  qt/hivemindaddressvalidator.h \
  qt/hivemindamountfield.h \
  qt/hivemindgui.h \
  qt/hivemindunits.h \
  qt/clientmodel.h \
  qt/coincontroldialog.h \
  qt/coincontroltreewidget.h \
  qt/combocreationwidget.h \
  qt/csvmodelwriter.h \
  qt/decisioncreationwidget.h \
  qt/decisionmarketcreationwidget.h \
  qt/editaddressdialog.h \
  qt/guiconstants.h \
  qt/guiutil.h \
  qt/intro.h \
  qt/macdockiconhandler.h \
  qt/macnotificationhandler.h \
	qt/marketview.h \
	qt/marketmodel.h \
	qt/markettradeview.h \
  qt/ballotview.h \
  qt/ballotballotfilterproxymodel.h \
  qt/ballotballottablemodel.h \
  qt/ballotballotwindow.h \
  qt/ballotbranchwindow.h \
  qt/ballotoutcomefilterproxymodel.h \
  qt/ballotoutcometablemodel.h \
  qt/ballotoutcomewindow.h \
  qt/ballotsealedvotefilterproxymodel.h \
  qt/ballotsealedvotetablemodel.h \
  qt/ballotsealedvotewindow.h \
  qt/ballotvotefilterproxymodel.h \
  qt/ballotvotetablemodel.h \
  qt/ballotvotewindow.h \
  qt/decisionbranchfilterproxymodel.h \
  qt/decisionbranchtablemodel.h \
  qt/decisionbranchwindow.h \
  qt/decisiondecisionfilterproxymodel.h \
  qt/decisiondecisiontablemodel.h \
  qt/decisiondecisionwindow.h \
  qt/decisionmarketfilterproxymodel.h \
  qt/decisionmarkettablemodel.h \
  qt/decisionmarketwindow.h \
  qt/decisionselectionview.h \
  qt/decisionselectionmodel.h \
  qt/decisiontradefilterproxymodel.h \
  qt/decisiontradetablemodel.h \
  qt/decisiontradewindow.h \
  qt/decisionview.h \
  qt/decisionviewgraph.h \
  qt/hivemindrecenttablemodel.h \
  qt/marketgraphwidget.h \
  qt/marketviewgraph.h \
  qt/networkstyle.h \
  qt/notificator.h \
  qt/openuridialog.h \
  qt/optionsdialog.h \
  qt/optionsmodel.h \
  qt/overviewpage.h \
  qt/paymentrequestplus.h \
  qt/paymentserver.h \
  qt/peertablemodel.h \
  qt/qcustomplot.h \
  qt/qvalidatedlineedit.h \
  qt/qvaluecombobox.h \
  qt/receivecoinsdialog.h \
  qt/receiverequestdialog.h \
  qt/recentrequeststablemodel.h \
  qt/resolvevotedialog.h \
  qt/resolvevotegraph.h \
  qt/resolvevotecoltablemodel.h \
  qt/resolvevoterowtablemodel.h \
  qt/resolvevoteinputtablemodel.h \
  qt/rpcconsole.h \
  qt/rpcwrapper.h \
  qt/scicon.h \
  qt/sendcoinsdialog.h \
  qt/sendcoinsentry.h \
  qt/signverifymessagedialog.h \
  qt/splashscreen.h \
  qt/trafficgraphwidget.h \
  qt/transactiondesc.h \
  qt/transactiondescdialog.h \
  qt/transactionfilterproxy.h \
  qt/transactionrecord.h \
  qt/transactiontablemodel.h \
  qt/transactionview.h \
  qt/utilitydialog.h \
  qt/voteview.h \
  qt/walletframe.h \
  qt/walletmodel.h \
  qt/walletmodeltransaction.h \
  qt/walletview.h \
  qt/winshutdownmonitor.h

RES_ICONS = \
  qt/res/icons/add.png \
  qt/res/icons/address-book.png \
  qt/res/icons/about.png \
  qt/res/icons/about_qt.png \
  qt/res/icons/author.png \
  qt/res/icons/hivemind.ico \
  qt/res/icons/hivemind.png \
  qt/res/icons/clock1.png \
  qt/res/icons/clock2.png \
  qt/res/icons/clock3.png \
  qt/res/icons/clock4.png \
  qt/res/icons/clock5.png \
  qt/res/icons/configure.png \
  qt/res/icons/connect0.png \
  qt/res/icons/connect1.png \
  qt/res/icons/connect2.png \
  qt/res/icons/connect3.png \
  qt/res/icons/connect4.png \
  qt/res/icons/debugwindow.png \
  qt/res/icons/edit.png \
  qt/res/icons/editcopy.png \
  qt/res/icons/editpaste.png \
  qt/res/icons/expand.png \
  qt/res/icons/export.png \
  qt/res/icons/eye.png \
  qt/res/icons/eye_minus.png \
  qt/res/icons/eye_plus.png \
  qt/res/icons/filesave.png \
  qt/res/icons/history.png \
  qt/res/icons/info.png \
  qt/res/icons/key.png \
  qt/res/icons/lock_closed.png \
  qt/res/icons/lock_open.png \
  qt/res/icons/ballot.png \
  qt/res/icons/decision.png \
  qt/res/icons/market.png \
  qt/res/icons/open.png \
  qt/res/icons/overview.png \
  qt/res/icons/quit.png \
  qt/res/icons/receive.png \
  qt/res/icons/remove.png \
  qt/res/icons/resolve.png \
  qt/res/icons/send.png \
  qt/res/icons/synced.png \
  qt/res/icons/trade.png \
  qt/res/icons/transaction0.png \
  qt/res/icons/transaction2.png \
  qt/res/icons/transaction_conflicted.png \
  qt/res/icons/tx_inout.png \
  qt/res/icons/tx_input.png \
  qt/res/icons/tx_output.png \
  qt/res/icons/tx_mined.png \
  qt/res/icons/verify.png

HIVEMIND_QT_CPP = \
  qt/hivemindaddressvalidator.cpp \
  qt/hivemindamountfield.cpp \
  qt/hivemindgui.cpp \
  qt/hivemindunits.cpp \
  qt/clientmodel.cpp \
  qt/csvmodelwriter.cpp \
  qt/guiutil.cpp \
  qt/intro.cpp \
  qt/networkstyle.cpp \
  qt/notificator.cpp \
  qt/optionsdialog.cpp \
  qt/optionsmodel.cpp \
  qt/peertablemodel.cpp \
  qt/qcustomplot.cpp \
  qt/qvalidatedlineedit.cpp \
  qt/qvaluecombobox.cpp \
  qt/rpcconsole.cpp \
  qt/scicon.cpp \
  qt/splashscreen.cpp \
  qt/trafficgraphwidget.cpp \
  qt/utilitydialog.cpp

if TARGET_WINDOWS
HIVEMIND_QT_CPP += qt/winshutdownmonitor.cpp
endif

if ENABLE_WALLET
HIVEMIND_QT_CPP += \
  qt/authorview.cpp \
  qt/authorpendingtablemodel.cpp \
  qt/addressbookpage.cpp \
  qt/addresstablemodel.cpp \
  qt/askpassphrasedialog.cpp \
  qt/branchselect.cpp \
  qt/coincontroldialog.cpp \
  qt/coincontroltreewidget.cpp \
  qt/combocreationwidget.cpp \
  qt/decisioncreationwidget.cpp \
  qt/decisionmarketcreationwidget.cpp \
  qt/editaddressdialog.cpp \
  qt/ballotview.cpp \
  qt/ballotballotfilterproxymodel.cpp \
  qt/ballotballottablemodel.cpp \
  qt/ballotballotwindow.cpp \
  qt/ballotbranchwindow.cpp \
  qt/ballotoutcomefilterproxymodel.cpp \
  qt/ballotoutcometablemodel.cpp \
  qt/ballotoutcomewindow.cpp \
  qt/ballotsealedvotefilterproxymodel.cpp \
  qt/ballotsealedvotetablemodel.cpp \
  qt/ballotsealedvotewindow.cpp \
  qt/ballotvotefilterproxymodel.cpp \
  qt/ballotvotetablemodel.cpp \
  qt/ballotvotewindow.cpp \
  qt/decisionbranchfilterproxymodel.cpp \
  qt/decisionbranchtablemodel.cpp \
  qt/decisionbranchwindow.cpp \
  qt/decisiondecisionfilterproxymodel.cpp \
  qt/decisiondecisiontablemodel.cpp \
  qt/decisiondecisionwindow.cpp \
  qt/decisionmarketfilterproxymodel.cpp \
  qt/decisionmarkettablemodel.cpp \
  qt/decisionmarketwindow.cpp \
  qt/decisionselectionview.cpp \
  qt/decisionselectionmodel.cpp \
  qt/decisiontradefilterproxymodel.cpp \
  qt/decisiontradetablemodel.cpp \
  qt/decisiontradewindow.cpp \
  qt/decisionview.cpp \
  qt/decisionviewgraph.cpp \
  qt/hivemindrecenttablemodel.cpp \
  qt/marketgraphwidget.cpp \
  qt/marketview.cpp \
	qt/marketmodel.cpp \
  qt/markettradeview.cpp \
  qt/marketviewgraph.cpp \
  qt/openuridialog.cpp \
  qt/overviewpage.cpp \
  qt/paymentrequestplus.cpp \
  qt/paymentserver.cpp \
  qt/receivecoinsdialog.cpp \
  qt/receiverequestdialog.cpp \
  qt/recentrequeststablemodel.cpp \
  qt/resolvevotedialog.cpp \
  qt/resolvevotegraph.cpp \
  qt/resolvevotecoltablemodel.cpp \
  qt/resolvevoterowtablemodel.cpp \
  qt/resolvevoteinputtablemodel.cpp \
  qt/rpcwrapper.cpp \
  qt/sendcoinsdialog.cpp \
  qt/sendcoinsentry.cpp \
  qt/signverifymessagedialog.cpp \
  qt/transactiondesc.cpp \
  qt/transactiondescdialog.cpp \
  qt/transactionfilterproxy.cpp \
  qt/transactionrecord.cpp \
  qt/transactiontablemodel.cpp \
  qt/transactionview.cpp \
  qt/voteview.cpp \
  qt/walletframe.cpp \
  qt/walletmodel.cpp \
  qt/walletmodeltransaction.cpp \
  qt/walletview.cpp
endif

RES_IMAGES =

RES_MOVIES = $(wildcard qt/res/movies/spinner-*.png)

HIVEMIND_RC = qt/res/hivemind-qt-res.rc

HIVEMIND_QT_INCLUDES = -I$(builddir)/qt -I$(srcdir)/qt -I$(srcdir)/qt/forms \
  -I$(builddir)/qt/forms

qt_libhivemindqt_a_CPPFLAGS = $(HIVEMIND_INCLUDES) $(HIVEMIND_QT_INCLUDES) \
  $(QT_INCLUDES) $(QT_DBUS_INCLUDES) $(PROTOBUF_CFLAGS) $(QR_CFLAGS)

qt_libhivemindqt_a_SOURCES = $(HIVEMIND_QT_CPP) $(HIVEMIND_QT_H) $(QT_FORMS_UI) \
  $(QT_QRC) $(QT_QRC_LOCALE) $(QT_TS) $(PROTOBUF_PROTO) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES)

nodist_qt_libhivemindqt_a_SOURCES = $(QT_MOC_CPP) $(QT_MOC) $(PROTOBUF_CC) \
  $(PROTOBUF_H) $(QT_QRC_CPP) $(QT_QRC_LOCALE_CPP)

# forms/foo.h -> forms/ui_foo.h
QT_FORMS_H=$(join $(dir $(QT_FORMS_UI)),$(addprefix ui_, $(notdir $(QT_FORMS_UI:.ui=.h))))

# Most files will depend on the forms and moc files as includes. Generate them
# before anything else.
$(QT_MOC): $(QT_FORMS_H)
$(qt_libhivemindqt_a_OBJECTS) $(qt_hivemind_qt_OBJECTS) : | $(QT_MOC)

#Generating these with a half-written protobuf header leads to wacky results.
#This makes sure it's done.
$(QT_MOC): $(PROTOBUF_H)
$(QT_MOC_CPP): $(PROTOBUF_H)

# hivemind-qt binary #
qt_hivemind_qt_CPPFLAGS = $(HIVEMIND_INCLUDES) $(HIVEMIND_QT_INCLUDES) \
  $(QT_INCLUDES) $(PROTOBUF_CFLAGS) $(QR_CFLAGS)

qt_hivemind_qt_SOURCES = qt/hivemind.cpp
if TARGET_DARWIN
  qt_hivemind_qt_SOURCES += $(HIVEMIND_MM)
endif
if TARGET_WINDOWS
  qt_hivemind_qt_SOURCES += $(HIVEMIND_RC)
endif
qt_hivemind_qt_LDADD = qt/libhivemindqt.a $(LIBHIVEMIND_SERVER)
if ENABLE_WALLET
qt_hivemind_qt_LDADD += $(LIBHIVEMIND_WALLET)
endif
qt_hivemind_qt_LDADD += $(LIBHIVEMIND_CLI) $(LIBHIVEMIND_COMMON) $(LIBHIVEMIND_UTIL) $(LIBHIVEMIND_CRYPTO) $(LIBHIVEMIND_UNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \
  $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) \
  $(LIBFDLIBM) $(LIBLINALG) $(LIBSECP256K1)
qt_hivemind_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
qt_hivemind_qt_LIBTOOLFLAGS = --tag CXX

#locale/foo.ts -> locale/foo.qm
QT_QM=$(QT_TS:.ts=.qm)

SECONDARY: $(QT_QM)

qt/hivemindstrings.cpp: $(libhivemind_server_a_SOURCES) $(libhivemind_wallet_a_SOURCES)
	@test -n $(XGETTEXT) || echo "xgettext is required for updating translations"
	$(AM_V_GEN) cd $(srcdir); XGETTEXT=$(XGETTEXT) ../share/qt/extract_strings_qt.py $^

translate: qt/hivemindstrings.cpp $(QT_FORMS_UI) $(QT_FORMS_UI) $(HIVEMIND_QT_CPP) $(HIVEMIND_QT_H) $(HIVEMIND_MM)
	@test -n $(LUPDATE) || echo "lupdate is required for updating translations"
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(LUPDATE) $^ -locations relative -no-obsolete -ts qt/locale/hivemind_en.ts

$(QT_QRC_LOCALE_CPP): $(QT_QRC_LOCALE) $(QT_QM)
	@test -f $(RCC)
	@test -f $(@D)/$(<F) || cp -f $< $(@D)
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name hivemind_locale $(@D)/$(<F) | \
	  $(SED) -e '/^\*\*.*Created:/d' -e '/^\*\*.*by:/d' > $@

$(QT_QRC_CPP): $(QT_QRC) $(QT_FORMS_H) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES) $(PROTOBUF_H)
	@test -f $(RCC)
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name hivemind $< | \
	  $(SED) -e '/^\*\*.*Created:/d' -e '/^\*\*.*by:/d' > $@

CLEAN_QT = $(nodist_qt_libhivemindqt_a_SOURCES) $(QT_QM) $(QT_FORMS_H) qt/*.gcda qt/*.gcno

CLEANFILES += $(CLEAN_QT)

hivemind_qt_clean: FORCE
	rm -f $(CLEAN_QT) $(qt_libhivemindqt_a_OBJECTS) $(qt_hivemind_qt_OBJECTS) qt/hivemind-qt$(EXEEXT) $(LIBHIVEMINDQT)

hivemind_qt : qt/hivemind-qt$(EXEEXT)

ui_%.h: %.ui
	@test -f $(UIC)
	@$(MKDIR_P) $(@D)
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(UIC) -o $@ $< || (echo "Error creating $@"; false)

%.moc: %.cpp
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(QT_INCLUDES) $(MOC_DEFS) $< | \
	  $(SED) -e '/^\*\*.*Created:/d' -e '/^\*\*.*by:/d' > $@

moc_%.cpp: %.h
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(QT_INCLUDES) $(MOC_DEFS) $< | \
	  $(SED) -e '/^\*\*.*Created:/d' -e '/^\*\*.*by:/d' > $@

%.qm: %.ts
	@test -f $(LRELEASE)
	@$(MKDIR_P) $(@D)
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(LRELEASE) -silent $< -qm $@
